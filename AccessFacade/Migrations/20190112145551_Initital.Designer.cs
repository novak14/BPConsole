// <auto-generated />
using AccessFacade.Dal.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AccessFacade.Migrations
{
    [DbContext(typeof(EfCoreDbContext))]
    [Migration("20190112145551_Initital")]
    partial class Initital
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AccessFacade.Dal.Entities.OneToTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("OneToTest");
                });

            modelBuilder.Entity("AccessFacade.Dal.Entities.UserTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("FirstName");

                    b.Property<int>("FkOneToTestId");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.HasIndex("FkOneToTestId");

                    b.ToTable("UserTest");
                });

            modelBuilder.Entity("AccessFacade.Dal.Entities.UserTestDelete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.HasKey("Id");

                    b.ToTable("UserTestDelete");
                });

            modelBuilder.Entity("AccessFacade.Dal.Entities.UserTestInsert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("FirstName");

                    b.Property<int>("FkOneToTestId");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("UserTestInsert");
                });

            modelBuilder.Entity("AccessFacade.Dal.Entities.UserTestUpdate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.HasKey("Id");

                    b.ToTable("UserTestUpdate");
                });

            modelBuilder.Entity("AccessFacade.Dal.Entities.UserTest", b =>
                {
                    b.HasOne("AccessFacade.Dal.Entities.OneToTest", "OneToTest")
                        .WithMany("UserTests")
                        .HasForeignKey("FkOneToTestId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
